"""empty message

Revision ID: 40f7ab51afe3
Revises: d2eb17436279
Create Date: 2018-02-11 15:12:31.203714

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '40f7ab51afe3'
down_revision = 'd2eb17436279'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('field',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('field_name', sa.String(length=32), nullable=True),
    sa.Column('table_name', sa.String(length=32), nullable=True),
    sa.Column('scheme_name', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rule',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('request_field_mapping',
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('field_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['field.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.PrimaryKeyConstraint('request_id', 'field_id')
    )
    op.create_table('request_rule_mapping',
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['rule.id'], ),
    sa.PrimaryKeyConstraint('request_id', 'rule_id')
    )
    op.add_column('request', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('request', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.alter_column('request', 'user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.create_foreign_key(None, 'request', 'user', ['user_id'], ['id'])
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('user', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.drop_column('user', 'updated_at')
    op.drop_constraint(None, 'request', type_='foreignkey')
    op.alter_column('request', 'user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.alter_column('request', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.drop_column('request', 'updated_at')
    op.drop_table('request_rule_mapping')
    op.drop_table('request_field_mapping')
    op.drop_table('rule')
    op.drop_table('field')
    # ### end Alembic commands ###
